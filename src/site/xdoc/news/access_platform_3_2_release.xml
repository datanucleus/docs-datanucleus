<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>News</title>
    </properties>

    <body>
        <section name="DataNucleus Access Platform 3.2.0 Released">
            <div id="dzone_vote_widget" style="float: left; margin-right: 8px;">
                <script type="text/javascript">var dzone_title = 'DataNucleus Access Platform 3.2 RELEASE Released';</script>
                <script type="text/javascript">var dzone_url = 'http://www.datanucleus.org/news/access_platform_3_2_release.html';</script>
		        <script type="text/javascript" language="javascript" src="http://widgets.dzone.com/widgets/zoneit.js"></script>
            </div>
            <p>
                <b>March 11th 2013</b>- DataNucleus Access Platform 3.2.0 ("Copernicus") is released.
                DataNucleus Access Platform provides persistence and retrieval of Java objects to/from
                a wide range of datastores including RDBMS, MongoDB, LDAP, XML, and Excel.
                <i>Version 3.2.0 Release</i> includes the following changes over 3.2 M4
            </p>
            <ul>
                <li>Fix to in-memory evaluation when using a variable that has no possible value</li>
                <li>Move operation queue for SCOs to ExecutionContext so that it can control the whole flush process</li>
                <li>Disable ObjectProvider pooling since it currently causes issues when in a highly multithreaded environment</li>
                <li>Add check on attempted persistence of <i>final</i> fields</li>
                <li>JPA : allow for user overriding a JNDI datasource with a URL-based datasource</li>
                <li>RDBMS : fix to bulk update when setting fields to NULL</li>
                <li>RDBMS : Cater for fields of a type that have a TypeConverter but no Mapping defined, falling
                    back to the TypeConverter</li>
                <li>Neo4j : Support for bulk delete</li>
                <li>MongoDB : Support for bulk delete</li>
                <li>HBase : Support for bulk delete</li>
            </ul>
            <p>
                <i>Version 3.2</i> includes the following major changes over 3.1
            </p>
            <ul>
                <li>The enhancer and ASM are now merged into <i>datanucleus-core</i></li>
                <li>L2 caching of embedded/serialised fields now defaults to ON</li>
                <li>ExecutionContext objects are now pooled, together with various other improvements for performance</li>
                <li>Enhancer now includes an option to enhance classes as <i>detachable</i> regardless of metadata</li>
                <li>Neo4j : now uses a single connection per PM/EM</li>
                <li>Neo4j : now supports bulk delete</li>
                <li>MongoDB : now uses a single connection per PM/EM</li>
                <li>MongoDB : now supports bulk delete</li>
                <li>HBase : supports various extensions for bloom filters, compression, in-memory etc (Nicolas Seyvet)</li>
                <li>HBase : now supports bulk delete</li>
                <li>RDBMS : support added for the Virtuoso database (Emmanuel Poitier)</li>
                <li>RDBMS : support added for Tomcat connection pool (Marshall Reeske)</li>
                <li>OSGi : improved deployability due to dependency version restrictions</li>
                <li>JPA : validated to work with JBoss 7 (thanks to Nicolas Seyvet and Scott Marlow)</li>
                <li>JPA : access of non-detached field will result in IllegalAccessException instead of the previous 
                    JDO exception</li>
                <li>JPA : support for JPA2.1 FROM "ON" clauses</li>
                <li>JPA : support for bulk usage of persist(), remove(), merge() and detach() (pass in Collection or 
                    array of entities)</li>
                <li>JPA : support for JPA2.1 "Generate Schema" feature</li>
                <li>If a type is supported to be persistent then it defaults to persistent now (no need to mark all 
                    non-standard typed fields as persistent).</li>
                <li>Add ability to disable the L2 cache on a PM/EM-basis where the PMF/EMF has it enabled.</li>
                <li>Cache : provides support for <i>javax.cache</i> v0.61</li>
                <li>Many bug fixes, and minor feature additions.</li>
            </ul>
            <p>
                This release is downloadable under an Apache 2 license from the
                <a href="http://www.datanucleus.org/download.html">DataNucleus community site</a>.
            </p>
        </section>

    </body>
</document>