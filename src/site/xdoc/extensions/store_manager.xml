<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Plugins : Store Manager</title>
    </properties>

    <body>
        <section name="Plugins : Store Manager">
            <img src="../images/nucleus_plugin.gif" border="0" alt=""/>
            <p>
                DataNucleus provides support for persisting objects to particular datastores. It provides this 
                capability via a "Store Manager". It provides a Store Manager plugin for many datastores (see below).
                You can extend DataNucleus's capabilities using the plugin extension 
                <i>org.datanucleus.store_manager</i>.
            </p>
            <table>
                <tr>
                    <th>Plugin extension-point</th>
                    <th>Key</th>
                    <th>URL-key</th>
                    <th>Description</th>
                    <th width="80">Location</th>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>rdbms</td>
                    <td>jdbc</td>
                    <td>Store Manager for RDBMS datastores</td>
                    <td>datanucleus-rdbms</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>db4o</td>
                    <td>db4o</td>
                    <td>Store Manager for DB4O datastore</td>
                    <td>datanucleus-db4o</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>neodatis</td>
                    <td>neodatis</td>
                    <td>Store Manager for NeoDatis datastores</td>
                    <td>datanucleus-neodatis</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>ldap</td>
                    <td>ldap</td>
                    <td>Store Manager for LDAP datastores</td>
                    <td>datanucleus-ldap</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>excel</td>
                    <td>Store Manager for Excel documents</td>
                    <td>excel</td>
                    <td>datanucleus-excel</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>odf</td>
                    <td>odf</td>
                    <td>Store Manager for ODF datastores</td>
                    <td>datanucleus-odf</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>xml</td>
                    <td>xml</td>
                    <td>Store Manager for XML datastores</td>
                    <td>datanucleus-xml</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>json</td>
                    <td>json</td>
                    <td>Store Manager for JSON datastores</td>
                    <td>datanucleus-json</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>amazons3</td>
                    <td>amazons3</td>
                    <td>Store Manager for Amazon S3 datastore</td>
                    <td>datanucleus-json</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>googlestorage</td>
                    <td>googlestorage</td>
                    <td>Store Manager for Google Storage datastore</td>
                    <td>datanucleus-json</td>
                </tr>                
                <tr>
                    <td>org.datanucleus.store_manager</td>
                    <td>hbase</td>
                    <td>hbase</td>
                    <td>Store Manager for HBase datastores</td>
                    <td>datanucleus-hbase</td>
                </tr>
            </table>
            <br/>
            <br/>
            <subsection name="Interface">
                <p>
                    If you want to implement support for another datastore you can achieve it 
                    by implementating the StoreManager interface.
                    <a href="http://www.datanucleus.org/javadocs/core/latest/org/datanucleus/store/StoreManager.html" target="_blank"><img src="../images/javadoc.gif" alt=""/></a>
                </p>
                <p>
                    For a brief guide on starting support for a new datastore, follow this
                    <a href="http://www.datanucleus.org/servlet/wiki/display/ENG/HOWTO+Support+a+new+datastore">HOWTO</a>
                </p>
                <br/>
            </subsection>

            <subsection name="Plugin Specification">
                <p>
                    Once you have this implementation you then need to make the class available as a 
                    DataNucleus plugin. You do this by putting a file <i>plugin.xml</i> in your JAR at the 
                    root of the CLASSPATH. The file <i>plugin.xml</i> will look like this
                </p>
                <source><![CDATA[
<?xml version="1.0"?>
<plugin id="mydomain.mystore" name="DataNucleus plug-ins" provider-name="My Company">
    <extension point="org.datanucleus.store_manager">
        <store-manager class-name="mydomain.MyStoreManager" url-key="mykey" key="mykey"/>
    </extension>
</plugin>]]></source>
                <p>
                    Note that you also require a MANIFEST.MF file as per the
                    <a href="plugins.html">Plugins Guide</a>.
                </p>
                <br/>
            </subsection>

            <subsection name="Plugin Usage">
                <p>
                    The only thing remaining is to use your StoreManager. To do this you simply define
                    your ConnectionURL to start with the <i>mykey</i> defined in the plugin spec (for example,
                    with the RDBMS plugin, the connection URL starts <i>jdbc:db-name:...</i>. 
                    This will select your store manager based on that.
                </p>
            </subsection>
        </section>
    </body>
</document>