<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Building with Maven</title>
    </properties>

    <body>
        <section name="Building DataNucleus with Maven (2+)">
            <p>
                DataNucleus can be easily developed using Maven2 (or later). 
                You also require JDK1.6+ and an SVN client (to download DataNucleus) and an editor.
                DataNucleus is split into several Maven projects and you need these building in a particular 
                order due to dependencies.
                <br/>
            </p>

            <subsection name="core">
                <p>
                    The DataNucleus "core" (in SVN under "platform/core/trunk") project is the root of all 
                    DataNucleus projects and is the primary requirement for development. You then simply type 
                    (from this project)
                </p>
                <source>mvn clean install</source>
                <p>This builds the jar under "target" and installs it into your Maven repository.</p>
            </subsection>

            <subsection name="api.{xxx}">
                <p>
                    The "api.{xxx}" projects (in SVN under "platform/api.{xxx}/trunk") provides persistence
                    using {xxx} API, and builds on top of "core".
                </p>
                <p>
                    To build the "api.{xxx}" using Maven, you simply type (from this project)
                </p>
                <source>mvn clean install</source>
                <p>This builds the jar under "target" and installs it into your Maven repository.</p>
            </subsection>

            <subsection name="store.{xxx}">
                <p>
                    The "store.{xxx}" projects (in SVN under "platform/store.{xxx}/trunk") provides persistence
                    to {xxx} datastores, and builds on top of "core".
                </p>
                <p>
                    To build the "store.{xxx}" using Maven, you simply type (from this project)
                </p>
                <source>mvn clean install</source>
                <p>This builds the jar under "target" and installs it into your Maven repository.</p>
            </subsection>

            <subsection name="store.types.{xxx}">
                <p>
                    The "store.types.{xxx}" projects (in SVN under "platform/store.types.{xxx}/trunk") provides persistence
                    for {xxx} java types, and builds on top of "core".
                </p>
                <p>
                    To build the "store.types.{xxx}" using Maven, you simply type (from this project)
                </p>
                <source>mvn clean install</source>
                <p>This builds the jar under "target" and installs it into your Maven repository.</p>
            </subsection>

            <subsection name="Other projects">
                <p>
                    When building other DataNucleus projects (in SVN under "platform") you follow the same 
                    instructions as shown above. That is, download the project, and type (from that project)
                </p>
                <source>mvn clean install</source>
                <p>This builds the plugin jar under "target" and installs it into your Maven repository.</p>
            </subsection>

            <subsection name="local.repository">
                <p>
                    If building DataNucleus up to and including 2.2 you require the "local.repository" project.
                    The "local.repository" project (in SVN under "platform/local.repository/trunk") provides all 
                    jars required by DataNucleus in a Maven1 style repository layout. It is referenced by all 
                    DataNucleus projects and so you need this to be present. You don't need to build anything here.
                    Note that if using Maven 2+ you can refer to this repository specifying the repository layout
                    as <i>legacy</i>.
                    <b>In DataNucleus 3+ this project is not needed</b> and the DataNucleus Maven repository contains all
                    necessary jars to build the project.
                </p>
            </subsection>

        </section>
    </body>
</document>