<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Source Code Repository</title>
    </properties>

    <body>
        <section name="GitHub : Source Code Repository">
            <img src="../images/GitHub-Mark-64px.png" alt="GitHub" border="0"/>
            <p>
                DataNucleus source code is hosted on <a href="https://github.com/datanucleus">GitHub</a> and uses
                the <a href="http://git-scm.com//">Git</a> source code version control system.
                You can check out from GitHub using
            </p>
<source>
Using SSH:
git clone git@github.com:datanucleus/{repository-name}.git

Using HTTPS:
git clone https://github.com/datanucleus/{repository-name}.git
</source>
            <p>
                Obviously, not everyone will want to check out all DataNucleus project repositories, so use this command
                for the particular repositories that you require. Note that GitHub repositories are all browsable via
                the web, for example <a href="https://github.com/datanucleus/datanucleus-neo4j">the DataNucleus Neo4j datastore plugin</a>.
                Note that all plugin repositories are <a href="http://maven.apache.org">Maven projects</a> so you need to
                understand how to build with Maven to build these plugins.
            </p>
            <p>
                <b>Note that (previous) source code for all versions up to and including 3.3.5 is stored in <a href="#sourceforge">SourceForge</a>.</b>
            </p>
            <br/>

            <subsection name="GitHub : Plugins">
                <p>
                    Within the DataNucleus project over on GitHub you have various repositories providing actual DataNucleus plugins.
                    These are currently
                </p>
<pre>
datanucleus-core

APIs :                                Type support :
datanucleus-api-jdo                   datanucleus-geospatial
datanucleus-api-jpa                   datanucleus-guava
datanucleus-api-rest                  datanucleus-jodatime

Datastores :                          Others :
datanucleus-excel                     datanucleus-cache
datanucleus-hbase                     datanucleus-jdo-query
datanucleus-json                      datanucleus-jdo-connector
datanucleus-ldap                      datanucleus-jpa-query
datanucleus-mongodb
datanucleus-neo4j
datanucleus-neodatis
datanucleus-odf
datanucleus-rdbms
datanucleus-xml
</pre>
                <p>
                    All plugins are independently versioned ("master" is the latest branch). This is because they have their own lifecycle, and plugins are
                    bundled together into the "products" (e.g AccessPlatform). So we could have AccessPlatform version 1.1 using version X of a plugin, and 
                    AccessPlatform version 1.2 using version Y of that plugin because it needs some new functionality.
                </p>
                <br/>
            </subsection>

            <subsection name="GitHub : Tests">
                <p>
                    In order to test DataNucleus capabilities we have many end-to-end tests. In the GitHub DataNucleus project these are available
                    in the repository <b>datanucleus-tests</b>. Below that you have some framework projects that need building first, then there are
                    tests split by the persistence API they are for (JDO, JPA, REST, etc).
                </p>
                <br/>
            </subsection>

            <subsection name="GitHub : Tools">
                <p>
                    The GitHub DataNucleus project also provides some tools to help in using DataNucleus. The repositories providing tools are
                </p>
<pre><![CDATA[
datanucleus-maven-plugin
]]></pre>
                <p>
                    Like with all plugins, the tools are independently versioned since they have their own lifecycle.
                </p>
                <br/>
            </subsection>
            <subsection name="GitHub : Documentation">
                <p>
                    The GitHub DataNucleus project also provides the documentation for DataNucleus. The repositories providing documentation are
                </p>
<pre><![CDATA[
docs-datanucleus
docs-datanucleus-skin
docs-accessplatform
docs-accessplatform-skin
]]></pre>
                <p>
                    The "skin" repositories provide a themed-layour for use with the Maven "site" plugin for each of the documentation sites.
                    Then we have one repository providing the <a href="http://www.datanucleus.org">datanucleus.org</a> website, and one
                    repository providing the <a href="http://www.datanucleus.org/products/accessplatform/">AccessPlatform</a> website.
                </p>
                <br/>
            </subsection>
        </section>

        <section name="Legacy Subversion : Source Code Repository">
            <a name="sourceforge"/>
            <p>
                DataNucleus uses <a href="http://subversion.tigris.org/">Subversion (SVN)</a> for housing source code for all versions
                <b>up to and including 3.3.5</b>. 
                The legacy DataNucleus SVN repository is hosted by <a href="http://www.sf.net/projects/datanucleus/">SourceForge</a>.
                <b>Note that this repository will not be updated with fixes etc now. You should use GitHub for that.</b>
                You can check out from the SourceForge SVN repository using
            </p>
<source>
Read-Only :
svn checkout svn://svn.code.sf.net/p/datanucleus/code/ datanucleus-code

Read-Write (committers) :
svn checkout --username={your-sf-login} svn+ssh://{your-sf-login}@svn.code.sf.net/p/datanucleus/code/ datanucleus-code
</source>
            <p>
                <b>Please note that this will check out ALL code and ALL branches!</b> What would be better is
                to check out "trunk" of all plugins that you are interested in (see below). 
                For example the following will just check out "core" and "api.jpa" plugins.
            </p>
<source>
svn checkout svn://svn.code.sf.net/p/datanucleus/code/platform/core/trunk datanucleus-core
svn checkout svn://svn.code.sf.net/p/datanucleus/code/platform/api.jpa/trunk datanucleus-api-jpa
</source>
            <p>
                The SVN repository is also
                <a href="https://sourceforge.net/p/datanucleus/code/HEAD/tree/">browsable online</a>.
                At the top level you will find
            </p>
            <pre><![CDATA[
platform/       <- Products and plugins
test/           <- End-to-end testing
tools/          <- Add on tools (Maven, Eclipse etc)
documentation/  <- Docs
samples/        <- Samples, tutorials etc
]]></pre>
            <br/>

            <subsection name="Legacy Subversion : Platform">
                <p>
                    The "platform" directory contains all source code for the plugins comprising
                    the different DataNucleus products. They are laid out as follows.
                    Please note that not all plugins are included here, this is simply to give an idea of 
                    the layout.
                </p>
                <pre><![CDATA[
platform/
    core/                      <- "Core" plugin, the basis for all datastore access
        trunk/
        branches/
    api.jdo/                   <- JDO API plugin
        trunk/
        branches/
    api.jpa/                   <- JPA API plugin
        trunk/
        branches/
    api.rest/                  <- REST API plugin
        trunk/
        branches/
    store.neo4j/               <- Neo4j datastore plugin
        trunk/
        branches/
    store.excel/               <- Excel datastore plugin
        trunk/
        branches/
    store.odf/                 <- ODF datastore plugin
        trunk/
        branches/
    store.json/                <- JSON datastore plugin
        trunk/
        branches/
    store.ldap/                <- LDAP datastore plugin
        trunk/
        branches/
    store.neodatis/            <- NeoDatis ODB datastore plugin
        trunk/
        branches/
    store.xml/                 <- XML datastore plugin
        trunk/
        branches/
    store.rdbms/               <- RDBMS datastore plugin
        trunk/
        branches/
    store.types.spatial/       <- Spatial types plugin
        trunk/
        branches/
    cache/                     <- Level 2 caching plugin
        trunk/
        branches/
    jdo.connector/             <- JCA adaptor for JDO
        trunk/
        branches/
    accessplatform/            <- AccessPlatform "product" bundle process
        trunk/
        branches/
    local.repository/          <- Repository (in Maven1 layout) with all dependencies (for use when developing under Eclipse)
        trunk/
            ]]></pre>
                <p>
                    All plugins are independently versioned (trunk is the latest, and branches are stored under
                    the branches directory). This is because they have their own lifecycle, and plugins are
                    bundled together into the "products" (AccessPlatform, AnalysisPlatform). So we could have
                    AccessPlatform using version X of a plugin, and AnalysisPlatform developing version Y of
                    that plugin because it needs some new functionality.
                </p>
                <br/>
            </subsection>
            <subsection name="Legacy Subversion : Tests">
                <p>
                    The End-to-End test section is laid out as follows
                </p>
            <pre><![CDATA[
test/
    accessplatform/
        trunk/
            test.jdo.general/
            test.jdo.application/
            test.jdo.datastore/
            test.jpa.general/
            ...
        branches/
    analysisplatform/
        trunk/
        branches/
            ]]></pre>
                <p>
                    So we have separated tests for "AccessPlatform" from "AnalysisPlatform"
                    and we branch <i>all</i> tests for each product.
                </p>
                <br/>
            </subsection>
            <subsection name="Legacy Subversion : Tools">
                <p>
                    The tools section contains anything that aids third party software operate with DataNucleus.
                    It is laid out like this
                </p>
                <pre><![CDATA[
tools/
    ide.eclipse/
        trunk/
        branches/
    maven2/
        trunk/
        branches/]]></pre>
                <p>
                    Like with all plugins, the tools are independently versioned since they have their
                    own lifecycle.
                </p>
                <br/>
            </subsection>
            <subsection name="Legacy Subversion : Documentation">
                <p>
                    Finally the documentation area in Subversion is as follows
                </p>
                <pre><![CDATA[
documentation/
    datanucleus.org/
        trunk/
        branches/
    accessplatform/
        trunk/
        branches/
                ]]></pre>
                <p>
                    So we have a main website ("datanucleus.org"), and a website for each product.
                </p>
                <br/>
            </subsection>
        </section>
    </body>
</document>