<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Queries - Query Methods</title>
    </properties>

    <body>
        <section name="JDOQL/JPQL : Query Methods">
            <img src="../images/nucleus_plugin.gif" border="0" alt=""/>
            <p>
                JDOQL/JPQL are defined to support particular methods/functions as part of the supported syntax.
                This support is provided by way of an extension point, with support for these methods/functions
                added via extensions. You can make use of this extension point to add on your own
                methods/functions - obviously this will be DataNucleus specific.
                <b>This plugin extension point is currently only for evaluation of queries in-memory</b>.
                It will have no effect where the query is evaluated in the datastore.
                The plugin extension used here is <i>org.datanucleus.store_query_methods</i>.
            </p>
            <table>
                <tr>
                    <th>Plugin extension-point</th>
                    <th>Class</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th width="80">Location</th>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>Math.abs</td>
                    <td>Use of Math functions for JDO2</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>Math.sqrt</td>
                    <td>Use of Math functions for JDO2</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>JDOHelper.getObjectId</td>
                    <td>Use of JDOHelper functions for JDO2</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>JDOHelper.getVersion</td>
                    <td>Use of JDOHelper functions for JDO2</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>CURRENT_DATE</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>CURRENT_TIME</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>CURRENT_TIMESTAMP</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>ABS</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>SQRT</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>MOD</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>SIZE</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>UPPER</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>LOWER</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>LENGTH</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>CONCAT</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>SUBSTRING</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>LOCATE</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>(static)</td>
                    <td>TRIM</td>
                    <td>JPQL functions</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>startsWith</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>endsWith</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>indexOf</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>substring</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>toUpperCase</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>toLowerCase</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>matches</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>trim</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.lang.String</td>
                    <td>length</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Collection</td>
                    <td>size</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Collection</td>
                    <td>isEmpty</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Collection</td>
                    <td>contains</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Map</td>
                    <td>size</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Map</td>
                    <td>isEmpty</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Map</td>
                    <td>containsKey</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Map</td>
                    <td>containsValue</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
                <tr>
                    <td>org.datanucleus.store_query_methods</td>
                    <td>java.util.Map</td>
                    <td>get</td>
                    <td>JDOQL methods</td>
                    <td>datanucleus-core</td>
                </tr>
            </table>
            <br/>

            <subsection name="Interface">
                <p>
                    Any query method/function plugin will need to implement 
                    <i>org.datanucleus.query.evaluator.memory.InvocationEvaluator</i>.
                    <a href="http://www.datanucleus.org/javadocs/core/latest/org/datanucleus/query/evaluator/memory/InvocationEvaluator.html" target="_blank"><img src="../../images/javadoc.gif" alt=""/></a>
                    So you need to implement the following interface
                </p>
                <source><![CDATA[
public interface InvocationEvaluator
{
    /**
     * Method to evaluate the InvokeExpression, as part of the overall evaluation
     * defined by the InMemoryExpressionEvaluator.
     * @param expr The expression for invocation
     * @param invokedValue Value on which we are invoking this method
     * @param eval The overall evaluator for in-memory
     * @return The result
     */
    Object evaluate(InvokeExpression expr, Object invokedValue, InMemoryExpressionEvaluator eval);
}]]></source>
                <br/>
            </subsection>

            <subsection name="Implementation">
                <p>
                    Let's assume that you want to provide your own method for "String" <i>toUpperCase</i>
                    [<i>obviously this is provided out of the box, but is here as an example</i>].
                </p>
                <source><![CDATA[

public class StringToUpperCaseMethodEvaluator implements InvocationEvaluator
{
    protected static final Localiser LOCALISER = Localiser.getInstance(
        "org.datanucleus.Localisation", ObjectManagerFactoryImpl.class.getClassLoader());

    public Object evaluate(InvokeExpression expr, Object invokedValue, InMemoryExpressionEvaluator eval)
    {
        String method = expr.getOperation(); // Will be "toUpperCase"

        if (invokedValue == null)
        {
            return null;
        }
        if (!(invokedValue instanceof String))
        {
            throw new NucleusException(LOCALISER.msg("021011", 
                method, invokedValue.getClass().getName()));
        }
        return ((String)invokedValue).toUpperCase();
    }
}]]></source>
            </subsection>
            
            <subsection name="Plugin Specification">
                <p>
                    When we have defined our query method we just need to make it into a DataNucleus plugin. 
                    To do this you simply add a file <i>plugin.xml</i> to your JAR at the root and add a 
                    MANIFEST.MF as per the <a href="plugins.html">Plugins Guide</a>. 
                    The file <i>plugin.xml</i> should look like this
                </p>
                <source><![CDATA[
<?xml version="1.0"?>
<plugin id="mydomain" name="DataNucleus plug-ins" provider-name="My Company">
    <extension point="org.datanucleus.store_query_methods">
        <query-method name="toUpperCase" class="java.lang.String"
            evaluator="org.datanucleus.query.evaluator.memory.StringToUpperCaseMethodEvaluator"/>
    </extension>
</plugin>]]></source>
                <p>
                    Note that you also require a MANIFEST.MF file as per the
                    <a href="plugins.html">Plugins Guide</a>.
                </p>
            </subsection>

            <subsection name="Plugin Usage">
                <p>
                    The only thing remaining is to use your method in a JDOQL/JPQL query, like this
                </p>
                <source><![CDATA[
Query q = pm.newQuery("SELECT FROM mydomain.Product WHERE name.toUpperCase() == 'KETTLE'");
]]></source>
                <p>
                    so when evaluating the query in memory it will call this evaluator class for the field
                    'name'.
                </p>
            </subsection>
        </section>
    </body>
</document>