<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>PluginPoints : RDBMS SQL Operations</title>
    </properties>

    <body>
        <section name="PluginPoints : RDBMS SQL Expression Support">
            <img src="../../images/nucleus_plugin.gif" border="0" alt=""/>
            <p>
                DataNucleus is developed as a plugin-driven framework and one of the components that is 
                pluggable is the support for JDOQL/JPQL expressions for java types in the "new" query mechanism.
                When you add support for a new java type, if you want to query fields of that type you will need
                to provide this.
            </p>
            <p>
                While you can define details of how your type is queryable, we only document here what you would do
                for a type that is mapped to a String (since that's the most common use-case). Here you simply
                need to add an entry into <i>plugin.xml</i> defining which expression and literal class you would
                use for handling that type.
            </p>

            <subsection name="Plugin Specification">
                <p>
                    Say we have a java type that is mapped using <i>mydomain.MyTypeMapping</i>.
                    Simply add a file <i>plugin.xml</i> to your JAR at the root, and it should look like this
                </p>
                <source><![CDATA[
<?xml version="1.0"?>
<plugin id="mydomain" name="DataNucleus plug-ins" provider-name="My Company">
    <extension point="org.datanucleus.store.rdbms.sql_expression">
        <sql-expression mapping-class="mydomain.MyTypeMapping" 
            literal-class="org.datanucleus.store.rdbms.sql.expression.StringLiteral"
            expression-class="org.datanucleus.store.rdbms.sql.expression.StringExpression"/>
    </extension>
</plugin>]]></source>
                <p>
                    Note that you also require a MANIFEST.MF file as per the
                    <a href="index.html">PluginPoints Guide</a>.
                </p>
            </subsection>
        </section>
    </body>
</document>