<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>org.datanucleus.store.rdbms</title>
    </properties>

    <body>
        <section name="DataNucleus RDBMS">
            <p>
                <i>datanucleus-rdbms</i> provides persistence of Java objects to RDBMS datastores. It builds on top 
                of the basic persistence provided by <i>datanucleus-core</i>
            </p>
            <ul>
                <li>Compile Requirement : JDK1.6+</li>
                <li>Runtime Requirement : JDK1.6+</li>
                <li>Latest version : 3.2.9</li>
                <li>Roadmap : <a href="http://issues.datanucleus.org/browse/NUCRDBMS?report=com.atlassian.jira.plugin.system.project:roadmap-panel" target="_blank">Via JIRA</a></li>
                <li>License : <a href="../../project/license.html">Apache 2</a></li>
                <li>Javadocs : <a href="../../javadocs/store.rdbms/3.2">3.2</a>,
                               <a href="../../javadocs/store.rdbms/3.1">3.1</a>,
                               <a href="../../javadocs/store.rdbms/3.0">3.0</a>,
                               <a href="../../javadocs/store.rdbms/2.2">2.2</a>,
                               <a href="../../javadocs/store.rdbms/2.1">2.1</a>,
                               <a href="../../javadocs/store.rdbms/2.0">2.0</a>,
                               <a href="../../javadocs/store.rdbms/1.1">1.1</a>,
                               <a href="../../javadocs/store.rdbms/1.0">1.0</a></li>
                <li>Source : <a href="https://sourceforge.net/p/datanucleus/code/HEAD/tree/platform/store.rdbms/trunk/">latest</a></li>
            </ul>

            <subsection name="Source Code">
                <p>trunk can be checked out as follows</p>
<source>svn co https://svn.code.sf.net/p/datanucleus/code/platform/store.rdbms/trunk store.rdbms</source>
                <br/>
            </subsection>

            <subsection name="Download">
                <p><i>datanucleus-rdbms</i> is downloadable as following</p>
                <ul>
                    <li><b>Releases</b> <a href="http://repo1.maven.org/maven2/org/datanucleus/datanucleus-rdbms/" target="_blank">from Maven Central</a></li>
                    <li><b>Nightly builds</b> <a href="http://www.datanucleus.org/downloads/maven2-nightly/org/datanucleus/datanucleus-rdbms/" target="_blank">from Maven2 Nightly Repository</a></li>
                </ul>
                <br/>
            </subsection>

            <subsection name="Dependencies">
                <p>
                    <i>datanucleus-rdbms</i> is dependent on the following packages of software. 
                    Click on the name to go to the home page for that software to download it.
                </p>
                <table>
                    <tr>
                        <th>Package</th>
                        <th>Version</th>
                        <th>Description</th>
                        <th width="150">Required?</th>
                    </tr>
                    <tr>
                        <td><a href="../core/index.html">datanucleus-core</a></td>
                        <td>3.2.0.m2+</td>
                        <td>Provides logging, localisation, and other framework facilities for DataNucleus.</td>
                        <td>Yes</td>
                    </tr>
                </table>
                <br/>
                <br/>
            </subsection>
        </section>

        <section name="SQL Generation">
            <p>
                All SQL generated in DataNucleus AccessPlatform from version 2.0 onwards use an SQL API. 
                This is stored in the <b>store.rdbms</b> plugin under the package(s) 
                <i>org.datanucleus.store.rdbms.sql</i>.
            </p>

            <subsection name="Table Groups">
                <p>
                    A <b>table group</b> is a group of tables in the SQL statement. The SQL statement
                    will be composed of 1 or more table groups.
                    A table group equates to an object in an object-based query language.
                    For example the candidate object will be in the first table group. When a relation
                    is navigated the related object will be in its table group. And so on.
                    All of the way down an inheritance tree will use the same table group; by that
                    we mean that if you have a class Person and class Employee which extends Person
                    and they have their own tables in the datastore, then when referring to the candidate
                    object of type Employee, the tables PERSON and EMPLOYEE will be in the same table group.
                </p>
                <br/>
            </subsection>

            <subsection name="Table Naming">
                <p>
                    With the SQLStatement API a developer can select the aliases of tables in the SQL
                    statement. If they don't select an alias then the aliases will be generated for them
                    using a DataNucleus plugin.
                </p>
                <p>
                    The plugin-point <i>org.datanucleus.store.rdbms.sql_tablenamer</i> defines an interface
                    to be implemented by plugins for naming of tables. The default option is
                    <b>alpha-scheme</b>.
                </p>
                <p>
                    <b>alpha-scheme</b> will name tables based on the table group they are in
                    and the number of the table within that group. So you will get table aliases like
                    A0, A1, A2, B0, B1, C0, D0.
                    In this case we have a candidate object in the query with 3 tables (A0, A1, A2)
                    and relations to an object with 2 tables (B0, B1) and these have relations to other
                    objects with a single table (C0), (D0).
                </p>
                <p>
                    <b>t-scheme</b> will name tables based on the table number in the statement as a whole
                    and doesn't use the table group for anything. So you get table aliases like
                    T0, T1, T2, T3, T4, T5, etc.
                </p>
                <p>
                    To define which namer plugin you want to use, set the extension 
                    <b>datanucleus.sqlTableNamingStrategy</b> on the SQLStatement and by the persistence
                    property <b>datanucleus.rdbms.sqlTableNamingStrategy</b> at construction of the PMF/EMF.
                </p>
                <br/>
            </subsection>
        </section>
    </body>
</document>