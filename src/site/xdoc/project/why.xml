<?xml version="1.0" encoding="iso-8859-1"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <properties>
        <title>Why DataNucleus ?</title>
    </properties>

    <body>
        <section name="Why DataNucleus ?">
            <p>
                Choosing a Java data management platform will come down to your requirements in terms of cost, 
                functionality, support, etc.
            </p>
            <ul>
                <li><b>DataNucleus is Open Source</b>, meaning that you have full access to the 
                    source code for all versions of DataNucleus. With this you have the capability to correct 
                    any errors that you encounter, but also better understand the data management process, 
                    and you can potentially extend DataNucleus to suit your needs.</li>
                <li><b>DataNucleus is free</b>. Our license is the <a href="license.html">Apache 2 license</a>, 
                    providing the code and executables (JARs) free of charge. You are free to use DataNucleus in your 
                    projects. Please refer to the license for the precise wording. DataNucleus will always remain
                    Open Source. Our license (Apache 2) is very flexible, much more than the license 
                    used for some other notable object/relational mapping software which use licenses like 
                    the LGPL.</li>
                <li><b>DataNucleus is independent and unstoppable</b>. The source code is open, and is not owned exclusively 
                    by some company. As such it cannot be bought by a large organisation such as Versant or Oracle and the 
                    product terminated (as has happened to customers of Kodo, JDO Genie over the last few years) - 
                    do you want that to happen to you? FYI EclipseLink is Oracle-driven, OpenJPA is IBM-driven and 
                    Hibernate is RedHat-driven</li>
                <li><b>DataNucleus is standards driven and standards compliant</b> implementing JDO1, JDO2, 
                    JDO2.1, JDO2.2, JDO3, JPA1, and JPA2 providing all mandatory items and the majority of optional 
                    items as well as providing several value-added extensions. Standards compliance safeguards
                    your applications future allowing you to swap between implementations.</li>
                <li><b>DataNucleus supports data management for many different types of datastores</b>. 
                    These include
                    <a href="../products/plugins/store.rdbms.html">the vast majority of RDBMS databases on the market today</a>,
                    <a href="../products/plugins/store.mongodb.html">MongoDB document store</a>,
                    <a href="../products/plugins/store.ldap.html">LDAP</a> and other datastores meaning that 
                    if you change your datastore in the future you don't need to change your data access 
                    layer.</li>
                <li><b>DataNucleus provides outstanding performance</b> when compared with the 
                    competing technologies.</li>
                <li><b>DataNucleus does not bring in large numbers of dependencies</b> unlike other 
                    persistence frameworks (for example, Hibernate) that have to provide a zip file just to 
                    package all of their requirements up. In fact DataNucleus could be run with just 1 
                    third-party library (jdo-api.jar) - beat that!</li>
                <li><b>DataNucleus is quality-driven</b> being developed using a Test Driven Development 
                    methodology. We have more than 2000 unit tests that are run before any release 
                    guaranteeing a stable product. In addition we baseline our capabilities against standard 
                    Java TCKs (JDO, JPA) - the definition of specification compliance. In our 
                    <a href="http://issues.datanucleus.org">issue tracker</a> you will not find large numbers of 
                    outstanding high priority items that you have to workaround (unlike what you find in the 
                    Hibernate, OpenJPA, EclipseLink issue trackers for example)</li>
                <li><b>DataNucleus provides a level of free support</b> by way of an 
                    <a href="http://forum.datanucleus.org">online forum</a> and also provides 
                    <a href="services/index.html#support">commercial support arrangements</a> if you require it.</li>
                <li><b>DataNucleus <a href="services/index.html">consulting and training</a></b> can be arranged with the developers of DataNucleus.</li>
                <li><b>DataNucleus is open to contributions/donations</b> allowing individuals to help out and allowing 
                    companies to sponsor features that they require for their deployments of DataNucleus.</li>
                <li><b>DataNucleus is plugin-driven</b> using the OSGi standard mechanism, providing plugins to external 
                    caching software (Coherence, EHCache, etc), to external database-pooling software 
                    (DBCP, C3P0, etc), and much more.</li>
            </ul>
        </section>

        <section name="DataNucleus Philosophy">
            <p>
                At DataNucleus we have the following philosophy.
            </p>
            <ul>
                <li><b>Power</b> : the user should be in control of their data. DataNucleus should empower them</li>
                <li><b>Persist Anywhere</b> : data should be persistable to any datastore required. 
                DataNucleus should support all datastores, or at the very least provide a mechanism whereby all
                can easily be supported</li>
                <li><b>Flexibility</b> : the user should be able to choose the API they wish. DataNucleus
                should support all standardised APIs in the problem domain.</li>
                <li><b>Right tool for the job</b> : the user should be able to choose the right query language
                or right datastore depending on the capabilities of that component. DataNucleus should
                not limit their choice</li>
                <li><b>Configurability</b> : the user should be able to utilise whatever components are best
                suited to the task. DataNucleus should provide a framework whereby all components can be
                utilised.</li>
                <li><b>Performance</b> : data processing should be efficient. DataNucleus should aim for
                optimum performance wherever possible with the enabled features and allow all non-essential
                features to be disabled to obtain this performance</li>
            </ul>
        </section>

    </body>
</document>
